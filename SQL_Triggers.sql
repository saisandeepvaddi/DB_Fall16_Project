DROP TRIGGER END_DATE_TRIGGER; commit;
CREATE OR REPLACE TRIGGER END_DATE_TRIGGER
AFTER INSERT OR UPDATE OF MEMBERSHIP_ID ON CUSTOMER
FOR EACH ROW 
WHEN (NEW.MEMBERSHIP_ID > 0)
DECLARE
	validity MEMBERSHIP_DETAILS.VALIDITY%TYPE;
BEGIN
	-- DBMS_OUTPUT.PUT_LINE(:NEW.MEMBERSHIP_ID);
	-- DBMS_OUTPUT.PUT_LINE(:OLD.CUSTOMER_ID);

	SELECT M.VALIDITY INTO validity FROM MEMBERSHIP_DETAILS M WHERE M.MEMBERSHIP_ID = :NEW.MEMBERSHIP_ID;
	:NEW.membership_begin_dt := trunc(sysdate);
	:NEW.MEMBERSHIP_STATUS := 'ACTIVE';
	:NEW.membership_end_dt := ADD_MONTHS(trunc(sysdate),validity);
	-- UPDATE CUSTOMER SET membership_begin_dt = trunc(sysdate), MEMBERSHIP_STATUS = 'ACTIVE', membership_end_dt = end_date where CUSTOMER_ID = :OLD.CUSTOMER_ID;
	DBMS_OUTPUT.PUT_LINE('Membership details updated for '||:OLD.lname||chr(9)||', '||:OLD.fname);
END;
/